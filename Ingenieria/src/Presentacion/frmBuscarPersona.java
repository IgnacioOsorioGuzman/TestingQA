/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;


import Negocio.Datos;
import Negocio.Utilidades;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class frmBuscarPersona extends javax.swing.JDialog {

     private Datos misDatos;
    private DefaultTableModel miTabla;
    private String respuesta = "";
    int personaAct = 0;
    public String ibmSeleccionado = "";
    
   
    
    

    public void setDatosPersona(Datos misDatos) {
        this.misDatos = misDatos;

    }

    public String getRespuesta() {
  return respuesta;

   }
    public frmBuscarPersona(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCriterio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        txtCriterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCriterioActionPerformed(evt);
            }
        });
        txtCriterio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCriterioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCriterioKeyTyped(evt);
            }
        });

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTablaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblTablaMousePressed(evt);
            }
        });
        tblTabla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblTablaFocusGained(evt);
            }
        });
        tblTabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblTablaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblTabla);

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/accept.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/delete.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Criterio de Busqueda:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAceptar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCriterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCriterioActionPerformed
        llenarTabla();
        respuesta = "";
    }//GEN-LAST:event_txtCriterioActionPerformed

    private void txtCriterioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioKeyPressed
        llenarTabla();
        respuesta = "";
    }//GEN-LAST:event_txtCriterioKeyPressed

    private void txtCriterioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioKeyTyped
        llenarTabla();
        respuesta = "";
    }//GEN-LAST:event_txtCriterioKeyTyped

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
      
        completarCamposPersona();
//         frmPersona.habilitarCamposModificar();

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        frmPersona.btnModificar.setEnabled(false);
        
        respuesta = "";
        dispose();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

         llenarTabla();
                
    }//GEN-LAST:event_formWindowOpened

    private void tblTablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblTablaKeyPressed

    
        
    }//GEN-LAST:event_tblTablaKeyPressed

    private void tblTablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTablaMousePressed

        obtenerFila();
    }//GEN-LAST:event_tblTablaMousePressed

    private void tblTablaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblTablaFocusGained

    }//GEN-LAST:event_tblTablaFocusGained

    private void tblTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTablaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblTablaMouseClicked
 
    
    private void completarCamposPersona(){
        
         try {
             String sql = "SELECT idPersona, ibm_per, grado.idGrado, escalafon.idEscalafon, nombre_per, apellido_per, "
                 + "correoInterno_per, correoExterno_per, anexo_per, celular_per "
                 + "FROM persona "
                 + "INNER JOIN grado ON grado.idGrado = persona.idGrado "
                 + "INNER JOIN escalafon ON escalafon.idEscalafon = persona.idEscalafon "
                 + "where ibm_per = '"+ibmSeleccionado+"'";
             
             ResultSet rsPer = misDatos.getConsulta(sql);
             while (rsPer.next()){
                 
                 String ibm = rsPer.getString("ibm_per");
                 int idgrado = rsPer.getInt("idGrado");
                 int idescalafon = rsPer.getInt("idEscalafon");
                 String nombre = rsPer.getString("nombre_per");
                 String apellido = rsPer.getString("apellido_per");
                 String correoInterno = rsPer.getString("correoInterno_per");
                 String correoExterno = rsPer.getString("correoExterno_per");
                 String anexo = rsPer.getString("anexo_per");
                 String celular = rsPer.getString("celular_per");
                 
                                  
                 frmPersona.txtIbm.setText(ibm);
                 frmPersona.cmbGrado.setSelectedIndex(idgrado);
                 frmPersona.cmbEscalafon.setSelectedIndex(idescalafon);
                 frmPersona.txtNombres.setText(nombre);
                 frmPersona.txtApellidos.setText(apellido);
                 frmPersona.txtCorreoInterno.setText(correoInterno);
                 frmPersona.txtCorreoExterno.setText(correoExterno);
                 frmPersona.txtAnexo.setText(anexo);
                 frmPersona.txtCelular.setText(celular);
                 
                 
                 frmPersona.btnModificar.setEnabled(true);
                 frmPersona.btnRegistrarAcesoSistema.setEnabled(true);
                 this.dispose();
                 
                 
                 
             }
         } catch (SQLException ex) {
             Logger.getLogger(frmBuscarPersona.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    
    
    
    
    
    
     private void obtenerFila() {
        
         int row = tblTabla.getSelectedRow();
         if (row == -1) {
             JOptionPane.showMessageDialog(rootPane, "Seleccione Fila");
             return;
         }else {
             
               String ibm = tblTabla.getValueAt(row, 1).toString();
               ibmSeleccionado = ibm;
                            
         }
         
         
    }
    
    
    private void llenarTabla() {

     String Titulos[] = {"ID Persona","IBM","Escalafon","Grado","Nombre","Apellidos","Correo Interno","Correo Externo","Anexo","Celular"};
     String registro[] = new String[11];
     miTabla = new DefaultTableModel(null, Titulos);

     String sql = "SELECT idPersona, ibm_per, nombre_esc,nombre_gra,nombre_per,apellido_per, "
             + "correoInterno_per, correoExterno_per, anexo_per, celular_per "
             + "FROM persona "
             + "INNER JOIN grado ON grado.idGrado = persona.idGrado "
             + "INNER JOIN escalafon ON escalafon.idEscalafon = persona.idEscalafon "
             + "ORDER BY grado.idGrado asc";

     ResultSet rs = misDatos.getConsulta(sql);
     try {
         while (rs.next()) {

             registro[0] = rs.getString("idPersona");
             registro[1] = rs.getString("ibm_per");
             registro[2] = rs.getString("nombre_esc");
             registro[3] = rs.getString("nombre_gra");
             registro[4] = rs.getString("nombre_per");
             registro[5] = rs.getString("apellido_per");
             registro[6] = rs.getString("correoInterno_per");
             registro[7] = rs.getString("correoExterno_per");
             registro[8] = rs.getString("anexo_per");
             registro[9] = rs.getString("celular_per");
             
             
             
             miTabla.addRow(registro);
         }
         tblTabla.setModel(miTabla);

     } catch (SQLException ex) {
         Logger.getLogger(frmBuscarPersona.class.getName()).log(Level.SEVERE, null, ex);
     }


        }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBuscarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBuscarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBuscarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBuscarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmBuscarPersona dialog = new frmBuscarPersona(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtCriterio;
    // End of variables declaration//GEN-END:variables

   
}
